using System;

// Делегаты.
/// 42:13 - Данные пример показывает, что с делегатами можем сообщать не только методы, которые ничего не принимают и ничего не возвращают, 
/// но и с делегатами мы можем сообщать все те методы, которые будут удовлетворять требованию делегата, которые создаются при создании класса делегата;
/// Я бы сказал, методы, которые совместимы с шаблоном делегата, такая терминология используется у Троелсена.

namespace Delegates
{
    // Класс, метод которого будет сообщен с делегатом.
    class MyClass
    {
        // Создаем метод, который планируем сообщить с делегатом.
        public string Method(string name)
        {
            return "Hello " + name;
        }
    }

    // На 21-й строке создаем класс-делегата с именем MyDelegate,
    // метод, который будет сообщен с экземпляром данного класса-делегата, 
    // будет принимать один строковой аргумент и возвращать строковое значение.

    public delegate string MyDelegate(string name);  // Создаем класс делегата. (1) 

    class Program
    {
        static void Main()
        {
            MyClass instance = new MyClass();   ///  инстанцируем класс MyClass;

            MyDelegate myDelegate = new MyDelegate(instance.Method); // Создаем экземпляр делегата и сообщаем с ним метод экземпляра instance; (2)

            string greeting = myDelegate.Invoke("Jeffrey Richter"); // Вызываем метод сообщенный с делегатом. (3)

            /// 40:01 - Нотация: Создаем локальную строковую переменную greeting и присваиваем ей возвращаемое значение метода, сообщенного с делегатом, 
            /// которому в качестве аргумента передаем строковое значение "Jeffrey Richter";
            /// Но не возвращенное значение метода Invoke(). Роль метода Invoke() в перевызове нужного метода, это такой СИНТАКСИЧЕСКИЙ САХАР.

            Console.WriteLine(greeting);

            greeting = myDelegate("Grady Booch"); // Другой способ вызова метода сообщенного с делегатом. (3'), без использования метода Invoke();

            Console.WriteLine(greeting);

            // Delay.
            Console.ReadKey();
        }
    } 
}
/// 41:20 - Многие сказали бы, что переменной greeting мы присваиваем возвращаемое значение делегата, можно и так сказать.
/// Но если уж оставили метод Invoke(), то пока есть смысл вот так оттенять, что переменной мы присваиваем возвращаемое значение метода, сообщенного с делегатом. 





