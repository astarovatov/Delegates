using System;

// Делегаты.

namespace Delegates
{
    // Класс, метод которого будет сообщен с делегатом.
    class MyClass
    {
        // Создаем метод, который планируем сообщить с делегатом.
        public void Method()
        {
            Console.WriteLine("Строку вывел метод сообщенный с делегатом.");
        }
    }

    // На 21-й строке создаем класс-делегата с именем MyDelegate.
    // Метод, который будет сообщен с экземпляром данного класса-делегата, 
    // не будет ничего принимать и не будет ничего возвращать.

    public delegate void MyDelegate();  // Создаем класс делегата. (1) 

    class Program
    {
        static void Main()
        {
            MyClass instance = new MyClass();

            MyDelegate myDelegate = new MyDelegate(instance.Method); // Создаем экземпляр делегата. (2)

            /// Сообщаем с экземпляром класса-делегата MyDelegate некий экземплярный метод instance.Method; 

            /// 29:37 - Не нужно читать в следующем виде, 
            /// Мы создаем экземпляр делегата MyDelegate и в качестве агрумента конструктора передаем указатель на метод - так будет слишком правдиво.
            /// Но с точки зрения ООП и С# это будет некрасиво. Мы не хотим, чтобы у нас звучало имя - указатель. В ООП хотят, чтобы мы взяли и сообщили 
            /// этот метод с экземпляром делегата, поэтому правильно и красиво будет сказать так:
            /// На 29-й строке мы создаем экземпляр делегата MyDelegate и СООБЩАЕМ с ним метод экземпляра instance, как-будто бы мы взяли и положили ему 
            /// в чемоданчик вот этот метод.
            /// В ООП хотят мыслить жизненными сущностями, поэтому наш делегат это чемоданчик, куда кладут метод.  

            myDelegate.Invoke();   // Вызываем метод сообщенный с делегатом. (3)

            myDelegate();          // Другой способ вызова метода сообщенного с делегатом. (3')

            /// Упрощенная форма синтаксиса вызова метода instance.Method, сообщенного с экземпляром класса-делегата MyDelegate;

            // Delay.
            Console.ReadKey();
        }
    }
}
/// 34:15 - Старайтесь выбирать более объектную нотацию, не техническую и меньше использовать слово указатель.Потому что за словом указатель стоит очень много технических понятий, которые приводили к массе ошибок в программах, поэтому Майкрософт и Андерс Хилсберг хочет, чтобы мы делегаты ассоциировали не с указателями, а с жизненной сущностью, с человеком делегатом, который носит чужие бумаги и представляет ваши интересы где-то.  

